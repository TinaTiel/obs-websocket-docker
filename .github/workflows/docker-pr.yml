name: Docker Image PR Verification

on:
  pull_request:
    branches:
      - '**'

env:
  REGISTRY: tinatiel
  ARTIFACT: obswebsocket

jobs:
  verify-pr:
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5000:5000
    steps:
    # Checkout the Repo
    - uses: actions/checkout@v2
    
    # Download the latest artifacts from Palakis
    - name: Download Palakis latest Ubuntu Build
      uses: dawidd6/action-download-artifact@v2
      with:
        github_token: ${{secrets.GITHUB_TOKEN}}
        workflow: main.yml # "CI Multiplatform Build"
        branch: master
        repo: Palakis/obs-websocket
        path: downloads
     
    # Extract the git hash info of the download
    - name: Extract prerelease info
      run: |
        input=$(ls -d downloads/*-Ubuntu64) && echo PRERELEASE=${input:10:7} >> $GITHUB_ENV
    - name: Set Tag
      run: |
        echo FINAL_TAG=$(date +%s).${PRERELEASE} >> $GITHUB_ENV

    - name: Display directory contents
      run: ls -R

    # Build and Test/Verify image
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
          driver-opts: network=host
    
    - name: Build and push to local registry
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: localhost:5000/${{ env.ARTIFACT }}:latest

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Verify the build
      run: |
        chmod +x verify_build.sh && ./verify_build.sh localhost:5000/${{ env.ARTIFACT }}
